%[_header%]
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     %(solver/SolverName%);

startFrom       startTime;

startTime       0;

stopAt          endTime;

%{%(physics/Time%)
%:Steady
deltaT          1;

endTime         %(solver/MaxIterations%);

writeControl    timeStep;

writeInterval   %(solver/SteadyWriteInterval%);

purgeWrite      0;

%:Transient
deltaT          %(solver/TimeStep%);

endTime         %(solver/EndTime%);

writeControl    adjustableRunTime;

writeInterval   %(solver/TransientWriteInterval%);

purgeWrite      0;

%{%(solver/SolverName%)
%:hisa
adjustTimeStep  no;
%:default
adjustTimeStep  yes;
%}

maxCo           5;

%}
%{%(solver/SolverName%)
%:interFoam multiphaseInterFoam
maxAlphaCo      5;

%}
writeFormat     ascii;

writePrecision  8;

runTimeModifiable true;

libs
(
    // Needed for availability of porous baffle boundary in potentialFoam
    #include "turbulenceLib"
%{%(solver/SolverName%)
%:hisa
    // Needed for availability of boundary conditions in potentialFoam
    "libhisaFiniteVolume.so"
%}
);

functions
{
%{%(reportingFunctions%)
%{%(reportingFunctions/%(0%)/FunctionObjectType%)
%:Force
    %(0%)
    {
        type                forces;
        libs                ("libforces.so");
        patches             ( %(reportingFunctions/%(0%)/PatchName%) );

		p                   %(reportingFunctions/%(0%)/Pressure%);
		U                   %(reportingFunctions/%(0%)/Velocity%);
%{%(physics/Flow%)
%:Compressible HighMachCompressible
        rho                 %(reportingFunctions/%(0%)/Density%);
%:default
        rho                 rhoInf;
%}
        rhoInf              100000;

		pRef                %(reportingFunctions/%(0%)/ReferencePressure%);
%{%(reportingFunctions/%(0%)/IncludePorosity%)
%:True
		porosity            true;
%:False
        porosity            false;
%}
%{%(reportingFunctions/%(0%)/WriteFields%)
%:True
		writeFields         true;
%:False
		writeFields         false;
%}
		CofR                ( %(reportingFunctions/%(0%)/CoR%) );

        binData
        {
            nBin          %(reportingFunctions/%(0%)/NBins%);
            direction     ( %(reportingFunctions/%(0%)/Direction%) );
%{%(reportingFunctions/%(0%)/Cumulative%)
%:True
            cumulative         true;
%:False
            cumulative         false;
%}
        }
    }
%:ForceCoefficients
    %(0%)
    {
        type                forceCoeffs;
        libs                ("libforces.so");
        patches             ( %(reportingFunctions/%(0%)/PatchName%) );

        p                   %(reportingFunctions/%(0%)/Pressure%);
		U                   %(reportingFunctions/%(0%)/Velocity%);
%{%(physics/Flow%)
%:Compressible HighMachCompressible
        rho                 %(reportingFunctions/%(0%)/Density%);
%:default
        rho                 rhoInf;
%}
        rhoInf              100000;

		pRef                %(reportingFunctions/%(0%)/ReferencePressure%);

%{%(reportingFunctions/%(0%)/IncludePorosity%)
%:True
		porosity            true;
%:False
        porosity            false;
%}
%{%(reportingFunctions/%(0%)/WriteFields%)
%:True
		writeFields         true;
%:False
		writeFields         false;
%}

		CofR                ( %(reportingFunctions/%(0%)/CoR%) );
        liftDir             ( %(reportingFunctions/%(0%)/Lift%) );
        dragDir             ( %(reportingFunctions/%(0%)/Drag%) );
        pitchAxis           ( %(reportingFunctions/%(0%)/Pitch%) );

        magUInf             %(reportingFunctions/%(0%)/MagnitudeUInf%);

        lRef                %(reportingFunctions/%(0%)/LengthRef%);
        Aref                %(reportingFunctions/%(0%)/AreaRef%);

        binData
        {
            nBin          %(reportingFunctions/%(0%)/NBins%);
            direction     ( %(reportingFunctions/%(0%)/Direction%) );
%{%(reportingFunctions/%(0%)/Cumulative%)
%:True
            cumulative         true;
%:False
            cumulative         false;
%}
        }
    }
%}
%}

%{%(reportingProbes%)
%[system/_functions_probes%]
%}
}
// ************************************************************************* //
