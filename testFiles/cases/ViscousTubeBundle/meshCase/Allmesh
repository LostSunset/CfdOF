#!/bin/bash

runCommand()
{
    if [ "$1" == "mpiexec" ]; then sol="$4"; else sol="$1"; fi
    sol=$(basename -- "$sol")
    sol="${sol%.*}"
    if [ -f log."$sol" ]; then rm log."$sol"; fi
    "$@" 1> >(tee -a log."$sol") 2> >(tee -a log."$sol" >&2)
    err=$?
    if [ ! $err -eq 0 ]; then exit $err; fi
}

# Unset and source bashrc
FOAMDIR="/usr/lib/openfoam/openfoam2112"
if [ ! -z "$FOAMDIR" ]
then
    source "$FOAMDIR/etc/config.sh/unset" 2> /dev/null
    source "$FOAMDIR/etc/bashrc"
fi

# Extract feature edges
runCommand surfaceFeatureEdges -angle 60 "constant/triSurface/Cut_Geometry.stl" "Cut_Geometry.fms"

runCommand cartesianMesh

# Create extrusions
runCommand createPatch -overwrite
cp system/extrudeMeshDict.0 system/extrudeMeshDict
runCommand extrudeMesh
mv log.extrudeMesh log.extrudeMesh.0
rm system/extrudeMeshDict
runCommand flattenMesh

# Extract surface mesh and convert to mm for visualisation in FreeCAD
if [ ! -z $FOAM_API ] && [ $FOAM_API -ge 1906 ] || [ $WM_PROJECT_VERSION == "v1906" ]
then
    runCommand surfaceMeshExtract mesh_outside.stl
else
    runCommand surfaceMeshTriangulate mesh_outside.stl
fi
if [ -z $FOAM_API ] && ( [ $WM_PROJECT_VERSION == "dev" ] || [ $WM_PROJECT_VERSION -ge 9 ] )
then
    runCommand surfaceTransformPoints "scale=(1000 1000 1000)" mesh_outside.stl mesh_outside.stl
else
    runCommand surfaceTransformPoints -scale "(1000 1000 1000)" mesh_outside.stl mesh_outside.stl
fi
